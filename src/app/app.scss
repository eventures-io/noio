// Fonts
@font-face {
  font-family: 'Playfair Display SC';
  src: url('../assets/fonts/playfair-display/playfair-display-regular.ttf');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Slabo 27px';
  src: url('../assets/fonts/slabo-27px/slabo27-regular.ttf');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'Source Sans Pro';
  src: url('../assets/fonts/sources-sans-pro/source-sans-pro-regular.ttf');
  font-weight: normal;
  font-style: normal;
}

body{
  font-family: 'Playfair Display SC', serif;
}

h1,
h2,
h3,
h4,
h5 {
  font-family: 'Playfair Display SC', serif;
}

// Global styles
button {
  border: none;
  outline: none;
  display: flex;
  align-items: center;
  padding: 6px 10px;
  border-radius: $border-radius;
  color: color($colors, light);
  span {
    margin-right: 10px;
  }
}

.outlined-button {
  border: 1px solid color($colors, light) !important;
  background-color: transparent !important;
}

p {
  color: color($colors, light) !important;
}

.toolbar-background {
  background: transparent;
  //background: rgba(black, 0.2);
  border: none;
}

.header-md:after {
  content: '';
  height: 0px;
}

.action-sheet-container {
  margin-bottom: 56px !important;
  background-color: transparent !important;
  .action-sheet-group {
    border-radius: 5px;
    margin-left: 10%;
    margin-bottom: 10px;
    width: 80%;
    background-color: rgba(color($colors, dark), 0.9) !important;

  }

  .action-sheet-button {
    padding: 20px 15px;
    font-size: larger;
    border-top: 1px solid color($colors, light);

  }
  .action-sheet-title {
    font-size: large;
    font-style: italic;
    color: color($colors, light) !important;
    text-align: center;
    padding: 25px 0 !important;
  }

  .button-inner {
    padding: 10px 0 !important;
    color: color($colors, light) !important;
    justify-content: center !important;
  }
  .action-sheet-button.activated {
    background-color: rgba(color($colors, dark), 0.9) !important;
  }

  .action-sheet-cancel {

    border: none !important;
    .button-inner {
      padding: 0 !important;
    }
  }
}

.list-loader {
  position: absolute;
  display: none;
  height: 10px;
  width: 100%;
  top: 40%;
  z-index: -1;
}

.show {
  display: block;
}

.spinner {
  margin: 100px auto;
  width: 60px;
  height: 40px;
  position: relative;
}

.cube1, .cube2 {
  background-color: #808080;
  width: 20px;
  height: 20px;
  position: absolute;
  top: 0;
  left: 0;

  -webkit-animation: sk-cubemove 1.8s infinite ease-in-out;
  animation: sk-cubemove 1.8s infinite ease-in-out;
}

.cube2 {
  -webkit-animation-delay: -0.9s;
  animation-delay: -0.9s;
}

@-webkit-keyframes sk-cubemove {
  25% {
    -webkit-transform: translateX(42px) rotate(-90deg) scale(0.5)
  }
  50% {
    -webkit-transform: translateX(42px) translateY(42px) rotate(-180deg)
  }
  75% {
    -webkit-transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5)
  }
  100% {
    -webkit-transform: rotate(-360deg)
  }
}

@keyframes sk-cubemove {
  25% {
    transform: translateX(42px) rotate(-90deg) scale(0.5);
    -webkit-transform: translateX(42px) rotate(-90deg) scale(0.5);
  }
  50% {
    transform: translateX(42px) translateY(42px) rotate(-179deg);
    -webkit-transform: translateX(42px) translateY(42px) rotate(-179deg);
  }
  50.1% {
    transform: translateX(42px) translateY(42px) rotate(-180deg);
    -webkit-transform: translateX(42px) translateY(42px) rotate(-180deg);
  }
  75% {
    transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);
    -webkit-transform: translateX(0px) translateY(42px) rotate(-270deg) scale(0.5);
  }
  100% {
    transform: rotate(-360deg);
    -webkit-transform: rotate(-360deg);
  }
}

// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.
